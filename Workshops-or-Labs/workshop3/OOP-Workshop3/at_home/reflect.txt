1)
void CreditCard::write() const{
      if (isValid()) {
	   cout << "Cardholder: " << m_cardHolderName << endl << "Card Number: " << m_cardNumber << endl
	   << "Institution: " << m_institutioncode << endl << "Expires: " << m_expiryMonth << "/" << m_expiryYear
	   << endl << "Number at the back: " << m_numberInTheBack;
      }   
	}
  
   void CreditCard::write(bool nme) const {
      if (nme == false) {
         writeCardInfo();
      }
      else {
         write();
      }
   }
   void CreditCard::write(bool nme, bool details) const{
      if(nme==false&&details==false){
      }
      else if(nme == true && details == true){
         write();
      }
      else if (nme == true && details == false) {
         writeName();
      }
      else if(nme == false && details == true){
         writeCardInfo();
      }

   }
From the above code in my programm i used overloading feature of the oop.

class CreditCard {
	private:
		char m_cardHolderName[MAX_NAME_LENGTH];
		unsigned long long m_cardNumber;
		int m_institutioncode;
		int m_expiryYear;
		int m_expiryMonth;
		int m_numberInTheBack;
      void writeName() const;
      void writeCardInfo() const;
	public:
		void name(const char cardHolderName[]);
		void initialize(unsigned long long creditCardNumber,
			int instCode, int expiryYear, int exporyMonth,
			int numberInTheBack);
		void write() const;
      void write(bool nme) const;
      void write(bool nme,bool details) const;
		bool isValid() const;
	};

From this above code in my programm i used encaptulation of the oop.

2).
 while (!myCC.isValid() && cout << "Invalid input" << endl);
in this while loop its chech if the isValid() function of the current object will true then its convert it into 
false and this condition will exit it from the loop.

In this programm credit card details store in the unsigned long long because only int is not enought fo storing 
the value of the credit card number. and Long Long have a higher range then the int. while unsigned keyword is for
the value doesnt have any sign like "+" or "-".